if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    set(PTHREAD pthread)
    set(DL	dl)
    set(RT	rt)
    set(LUALIB	luajit)
else(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    set(LUALIB	lua51lib)
endif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")

include_directories(../)
link_directories(../lib/${CMAKE_BUILD_TYPE})
set(EXECUTABLE_OUTPUT_PATH ../../bin/${CMAKE_BUILD_TYPE})
set(LIBRARY_OUTPUT_PATH ../../bin/${CMAKE_BUILD_TYPE})

add_executable(test_datetime test_datetime.cpp)
target_link_libraries(test_datetime common gtest ${PTHREAD})
add_executable(test_luausage test_luausage.cpp)
target_link_libraries(test_luausage common gtest ${LUALIB} ${DL})
add_executable(test_luabench test_luabench.cpp)
target_link_libraries(test_luabench common gtest ${LUALIB} ${DL})
add_executable(test_ipc test_ipc.cpp)
target_link_libraries(test_ipc common gtest ${PTHREAD} ${RT})
add_executable(test_strtrim test_strtrim.cpp)
target_link_libraries(test_strtrim common gtest)
add_executable(test_strcmp test_strcmp.cpp)
target_link_libraries(test_strcmp common gtest)
add_executable(test_strtoken test_strtoken.cpp)
target_link_libraries(test_strtoken common gtest)
add_executable(test_regex test_regex.cpp)
target_link_libraries(test_regex common gtest)
add_executable(test_delegate test_delegate.cpp)
target_link_libraries(test_delegate common gtest)
add_executable(test_cputimes test_cputimes.cpp)
target_link_libraries(test_cputimes common gtest)
add_executable(test_path test_path.cpp)
target_link_libraries(test_path common gtest)
add_executable(test_seh test_seh.cpp)
target_link_libraries(test_seh common gtest)
add_executable(test_threads test_threads.cpp)
target_link_libraries(test_threads common gtest ${PTHREAD})
add_executable(test_digraph test_digraph.cpp)
target_link_libraries(test_digraph common gtest)
add_executable(test_bitmap test_bitmap.cpp)
target_link_libraries(test_bitmap common gtest)
add_executable(test_lrucache test_lrucache.cpp)
target_link_libraries(test_lrucache common gtest)
add_executable(test_expression test_expression.cpp)
target_link_libraries(test_expression common gtest)
add_executable(test_properties test_properties.cpp)
target_link_libraries(test_properties common gtest)
add_executable(test_json test_json.cpp)
target_link_libraries(test_json common gtest)
add_executable(test_xml test_xml.cpp)
target_link_libraries(test_xml common gtest)
add_executable(test_sqlite test_sqlite.cpp)
target_link_libraries(test_sqlite common gtest ${DL} icui18n icuuc)
add_executable(test_event test_event.cpp)
target_link_libraries(test_event common gtest)
add_executable(test_pipe test_pipe.cpp)
target_link_libraries(test_pipe common gtest)
add_executable(test_network test_network.cpp)
target_link_libraries(test_network common gtest)
